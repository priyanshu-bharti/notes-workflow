# Table of contents

## Introduction

- [Overview](README.md)

## Mermaid

- [Creating Diagrams with Mermaid](mermaid/Readme.md)

## Interview Questions

- [CSS](interview-questions/css.md)
- [HTML](interview-questions/html.md)
- [Javascript](interview-questions/js.md)
- [Node.js and Express](interview-questions/node.md)
- [React.js](interview-questions/react.md)

## Java

- Core Java
  - [Basics](java/core/0.Basics.md)
  * [Intermediate](java/core/1.Intermediate.md)
- Advanced Concepts

## Data Structures and Algorithms

- Core Concepts
  - [Big O](dsa/concepts/big-o.md)
  - [Primitive Arrays](dsa/concepts/primitive-arrays.md)
  - [Search Algorithms](dsa/concepts/searching-algos.md)
  * [Sort Algorithms](dsa/concepts/sorting-algos.md)
  * [Linked List](dsa/concepts/linked-list.md)
  * [Queues](dsa/concepts/queue.md)
  * [Stacks](dsa/concepts/stack.md)
  * [Arraylist](dsa/concepts/array-list.md)
  * [Ring Buffer](dsa/concepts/ring-buffer.md)
  * [Recursion](dsa/concepts/recursion.md)
  * [Path Finding](dsa/concepts/path-finding.md)
  * [Trees](dsa/concepts/trees.md)
  * [Graphs](dsa/concepts/graphs.md)
  * [Heaps](dsa/concepts/heaps.md)
  * [Maps](dsa/concepts/maps.md)
  * [Caching](dsa/concepts/caching.md)
  * [Tree/Graph Algorithms](dsa/concepts/tree-graph-algos.md)
  * [Bit Wise Operations](dsa/concepts/bitwise.md)
  * [Greedy Algorithms](dsa/concepts/greedy-algorithms.md)
  * [Math](dsa/concepts/math.md)
- Leetcode Problems

## System Design

- Building Blocks
  - [APIs]()
  - [CDNs]()
  - [Proxy vs Reverse Proxy]()
  - [DNS]()
  - [Caching Strategies]()
  - [Message Queues]()
  - [Distributed Caching]()
  - [API Gateways]()
  - [Load Balancing]()
  - [DB Types and Tradeoffs]()
  - [SQL vs NoSQL]()
  - [Consistency Patterns]()
  - [Heartbeats]()
  - [Circuit Breakers]()
  - [Idempotency]()
  - [DB Scaling Strategies]()
  - [Data Replication Strategies]()
  - [Failover]()
  - [Bloom Filters]()
  - [Message Queues]()
  - [WebSockets]()
  - [Checksums]()
  - [Distributed Locking]()
  - [Hadoop]()
  - [ETL]()
  - [gRPC]()
  - [Rest vs Soap]()
  - [Firewalls]()
  - [Wide Column Store]()
  - [Temporal Databases]()
  - [Graph Databases]()
  - [Service Discovery]()
- Key Concepts
  - [Scalability]()
  - [Availability]()
  - [CAP Theorem]()
  - [ACID Transactions]()
  - [Consistent Hashing]()
  - [Rate Limiting]()
  - [Single Point of Failure]()
  - [Fault Tolerance]()
  - [Consensus Algorithms]()
  - [Gossip Protocol]()
  - [Service Discovery]()
  - [API Design]()
  - [Disaster Recovery]()
  - [Distributed Error Tracing]()
  - [Denormalization]()
  - [SQL Tuning]()
  - [Backpressure]()
  - [Exponential Backoff]()
- Performance Antipatterns
  - [Improper Instantiation]()
  - [Monolithic Persistence]()
  - [Noisy neighbor]()
  - [Synchronous IO]()
  - [Extraneous Fetching]()
  - [Busy Database]()
  - [Busy Frontend]()
  - [Chatty IO]()
  - [Retry Storm]()
  - [No Caching]()
- Architectures
  - [Microservices]()
  - [Serverless]()
  - [Client/Server]()
  - [Layered]()
  - [Distributed Systems]()
  - [Service Oriented]()
  - [Microfrontends]()
- System Design and Implementation
  - [Strangler Fig]()
  - [Sidecar]()
  - [Static Content Hosting]()
  - [Leader Election]()
  - [CQRS]()
  - [Pipes and Filters]()
  - [Ambassador]()
  - [Gateway Routing]()
  - [Gateway Aggregation]()
  - [External Config Store]()
  - [Compute Resource Consolidation]()
  - [Anti-corruption Layer]()
- Cloud Design Patterns
  - Data Management
    - [Valet Key]()
    - [Static Content Hosting]()
    - [Materialized View]()
    - [Index Table ]()
    - [Event Sourcing]()
    - [Cache Aside]()
  - Messaging
    - [Sequential Convoy]()
    - [Scheduling Agent Supervisor]()
    - [Queue-based Load levelling]()
    - [Publisher Subscriber]()
    - [Priority Queue]()
    - [Pipes and Filters]()
    - [Competing Consumers]()
    - [Choreography]()
    - [Claim Check]()
    - [Async Request Reply]()
- Reliability Patterns
  - Availability
    - [Deployment Stamps]()
    - [Geodes]()
    - [Throttling]()
    - [Health Endpoint Monitoring]()
    - [Bulkhead]()
  - Resiliency
    - [Compensating Transaction]()
    - [Scheduler Agent Supervisor]()
  - Security
    - [Federated Identity]()
    - [Gatekeeper]()
- Commonly Asked Questions
  - [Url Shortener]()
  - [Pastebin]()
  - [Rate Limiter]()
  - [Load Balancer]()
  - [Notification System]()
  - [Distributed CRON]()
  - [Uber]()
  - [Google Maps]()
  - [Google Search]()
  - [Google Drive]()
  - [Youtube]()
  - [Netflix]()
  - [Twitter]()
  - [Food Delivery]()
  - [Ride Sharing]()
  - [Parking Lot]()
  - [Deck of Cards]()
  - [Online chat]()
  - [Payments Gateway]()
  - [Snowflake]()
  - [UPI]()
  - [Google Spanner]()
  - [KV Store]()
- Large Scale Storage and Caching
  - [Distributed Cache]()
  - [Timeseries Database]()
  - [Distributed File System]()
  - [Log Aggregation System]()
- High Throughput Messaging (Event Driven)
  - [Pub-Sub Queue]()
  - [Message Queue (SQS, NATS)]()
  - [Event-driven Microservice]()
  - [Realtime Chat System]()
  - [Video-Call]()
- Search and Recommendation Systems
  - [Elastisearch]()
  - [Personalized recommender system]()
  - [Autosuggest System]()
  - [Autocomplete System]()
  - [Content Moderation System]()
  - [Social Media Feed Ranking]()
- Realtime Systems & Streaming
  - [Google Docs (Collaboration)]()
  - [Twitch]()
  - [Multiplayer Game Backend]()
  - [Stock Market Price Aggregation]()
- Web Scale DB & Consistency
  - [CockroachDB (Distributed SQL)]()
  - [Cassandra/DynamoDB]()
  - [Global Secondary Indexing in DB]()
  - [Schema Evolution in Large DB]()
- Security, Authentication & Access Control
  - [OIDC]()
  - [OAuth 2.0]()
  - [SAML]()
  - [Secure File Sharing]()
  - [Identity Verification System]()
- Scalable Infrastructure & Cloud Service
  - [Multi-region deployment strategy]()
  - [Autoscaling (K8S)]()
  - [IaaS (Terraform Based)]()
  - [Disaster Recovery System (Hot vs Cold Standby)]()
- Monitoring, Observing and Debugging
  - [Centralized Logger]()
  - [Centralized Tracing and Telemetry]()
  - [Incident Response System]()
  - [Distributed System Health Check]()
  - [Anomaly Detection System for Cloud]()
- Payments, Banking and FinTech
  - [Fraud Detection System for Payment]()
  - [Micro-lending Platform]()
  - [Crypto Exchange]()
  - [Blockchain based voting system]()

## Database Management Systems

- [Introduction]()
- RDBMS
  - [Relations]()
  - [Degrees of Relation]()
  - [Keys]()
  - [Schema]()
  - [Relational Operations]()
- SQL
  - [Composite Keys]()
  - [Joins]()
  - [View]()
  - [Trigger]()
  - [Unique vs Primary Key]()
  - [SQL Injection]()
  - [SQL Privileges]()
  - [Delete vs Truncate]()
  - [Subquery]()
  - [Subqueries vs Joins]()
  - [Indexing]()
  - [Query Execution Plan]()
  - [Clustered and Non-clustered Indexes]()
  - [Cursors]()
- Relational DB Design
  - [Features of Good DB Design]()
  - [Functional Dependency]()
  - [Normalization]()
  - [Anomalies resolved by normalization]()
  - [Normalization Types]()
- Storage and File Structure
  - [Storage System of DB]()
  - [File Structure of DB]()
  - [B+Trees and How they work]()
- Transaction Management
  - [Transaction & its states]()
  - [Commit, Rollback and Savepoint]()
  - [ACID Properties]()
  - [Implementing atomicity in transactions]()
  - [Concurrent Transactions]()
  - [Schedule]()
  - [Concurrency Control]()
- Deadlock
  - [Deadlock Example]()
  - [Deadlock Detection]()
  - [Deadlock Prevention]()
  - [Prevention vs Detection]()
  - [Starvation]()
  - [Deadlock Recovery]()

## Operating Systems

- Overview
  - [Basics]()
  - [Memory Hardware]()
  - [Software Concepts]()
  - [Important Terms]()
  - [Multi-X]()
- Process
  - [Process & States]()
  - [PCB Structure & Process in Memory]()
  - Process Scheduling
    - [What is process scheduling]()
    - [Need for process scheduling]()
    - [Burst Cycles]()
    - [Dispatcher]()
    - [Scheduling Criteria]()
    - [Queues & Schedulers]()
    - [Algorithms]()
    - [Starvation and Ageing]()
  - [CPU vs IO Bound Processes]()
  - [Context Switching]()
  - [IPC]()
  - [Piping]()
  - [Zombie Processes]()
- Thread
  - [Multithreading & Examples]()
  - [Multithreading models]()
  - [Optimal Number of Threads for process.]()
  - [Why static variables are dangerous]()
- Synchronization
  - [Why need process synchronization]()
  - [Physical vs Logical Address Space]()
  - [Mutual Exclusion and Critical Section]()
  - Classic Critical Section problems
    [- CS-Problem Peterson Solution]()
    [- Bounded Buffer Problem]()
    [- Reader-writer problem]()
    [- Dining Philosopher Problem]()
  - [Preemptive vs Non-Preemptive Kernels]()
  - [Semaphores and Mutexes]()
  - [Busy waiting and Spin Locks]()
- Deadlocks
  - [What is Deadlock]()
  - [Effects of deadlock]()
  - [Necessary conditions for deadlock]()
  - [Prevention/Avoidance Conditions]()
  - [Detection/Recovery Algorithms]()
  - [Deadlock Ignorance]()
- Memory Management Strategies
  - [Registers vs Main memory addressing]()
  - [Memory Space Protections]()
  - [Logical vs Physical Address Space]()
  - [Swapping]()
  - Memory Allocation
    - [Contiguous]()
    - [Paging]()
    - [Segmentation]()
  - [Why Paging increases context-switch time]()
  - [Page vs Frame]()
  - [TLB Hit vs Miss]()
- Virtual Memory Management
  - [Memory Management Goals]()
  - [Virtual Memory]()
  - [Demand Paging]()
  - [Pure Demand Paging]()
  - [Swap Space]()
  - [Page Faults]()
  - [Page Replacement Algorithms]()
  - [Thrashing & its Solution]()
- [File IO Algorithms]()

## Networking

- [Unicast vs Multicast vs Broadcast]()
- [OSI model]()
- [TCP/IP Stack]()
- [How Packet Travels]()
- [HTTP vs HTTPS]()
- [SSL/TLS]()
- [Latency vs Throughput]()
- [Public vs Private IP]()
- [Multiplexing]()
- [How Email Works]()
- [How P2P (Torrent) Works]()
- [How FTP Works]()
- [How VoLTE Works]()
- [Firewalls]()
- [Basic Network Attacks]()
- [DoS and DDoS Prevention]()
- [Digital Signatures and Certificates]()
- Terms to Know
  - [Cryptography]()
  - [Symmetric Key and Asymmetric Key]()
  - [Hashing]()
  - [AES, DES & RSA]()
  - [SHA, MD5, Bcrypt, PBKDF2 & Argon2]()

## Object Oriented Programming

- Class
  - [Struct vs Class]()
  - [Access Modifiers]()
  - [Friend and Protected Friend]()
  - [Member function Inline Keyword]()
  - Constructors
    - [What is it?]()
    - [Copy Constructors]()
    - [Virtual Constructors]()
    - [Virtual Copy Constructors]()
    - [Constructor Overloading]()
  - Destructor
    - [What is it?]()
    - [Private Destructor]()
    - [Virtual Destructor]()
    - [Pure Virtual Destructor]()
  - [Objects]()
  - [Class vs Objects]()
  - Keywords
    - [static]()
    - [virtual]()
    - [abstract]()
    - [final]()
    - [explicit]()
    - [this]()
    - [new]()
    - [const]()
    - [super]()
- Pillars
  - Polymorphism
    - [Static vs Dynamic Polymorphism]()
    - [Abstract Class]()
  - Inheritance
    - [Need for inheritance]()
    - [Types of inheritance]()
    - [Limitations of inheritance]()
    - [Sealed Modifiers]()
    - [new vs override]()
    - [Calling base method without creating instance]()
    - [Object Slicing]()
    - [Generalization vs Aggregation vs Composition]()
  - Encapsulation
    - [Need for it]()
    - [How to achieve]()
  - Abstraction
    - [Encapsulation vs Abstraction]()
    - [Interfaces vs Abstract Classes]()
- Binding
  - [Static vs Dynamic Binding]()
  - [Early vs Late Binding]()
- [Cohesion vs Coupling]()
- [Message Passing]()

## Javascript and Typescript

- Core JavaScript Concepts
  - JS Fundamentals
    - Objects
    - Types
    - Functions
    - Object Properties
    - Classes
    - Error Handling
    - Async JS
    - Generators
    - Modules
    - Proxies
  - Browser APIs & DOM
    - DOM
    - Events
    - UI Events
    - Form Handling
    - Resource Loading
    - Frames and Windows
    - Subtle Crypto
  - Storage & Networking
    - Binary Data
    - Network Requests
    - Cookies
    - LocalStorage, SessionStorage, and IndexedDB
    - Shadow DOM
  - Miscellaneous
    - Misc
- Backend JS
  - Core Node.js Concepts
    - Event Loop
    - __dirname & __filename
    - Callstack & Stacktrace
    - Env Variables
    - process.env and process.cwd
    - Stdout & Stderr
    - Garbage Collection
  - File and process Management
    - glob
    - fs-extra
    - Watching Changes
    - Inquirer & Prompt Library
    - Templating Engines
  - Node.js Built-in Modules
    - node:fs
    - node:path
    - node:http
    - node:http/2
    - node:https
    - node:crypto
    - node:async_hooks
    - node:child_process
    - node:cluster
    - node:stream
    - node:stream/web
    - node:worker_threads
    - node:os
    - node:process
    - node:tls
    - node:url
    - node:perf_hooks
    - node:buffer
    - node:net
  - Frameworks and Libraries
    - Express.js
    - Winston
    - PM2
  - ORMs
    - Mongoose
    - TypeORM


## React and Redux


## Java

- [ ] ### Java Fundamentals
  - [ ] #### Day 1
    - [x] Variables (single/multiple)
    - [x] Constants
    - [x] Printing stuff on the console
    - [x] Reading Keyboard Input
    - [x] Data Types and Collection Framework
      - [x] Integer Types
      - [x] Floating Point
      - [x] Booleans
      - [x] Chars and Strings
      - [x] Primitive Arrays
      - [x] ArrayList
      - [x] HashSets and TreeSets
      - [x] HashMaps and TreeMaps
      - [x] Stacks
      - [x] Priority Queue and Array Dequeue
      - [x] Record and Points
    - [x] Implicit and Explicit Type Conversions
    - [x] Operators and Conditionals
    - [x] Various Loops
    - [x] Object Oriented Programming
      - [x] Classes
      - [x] Objects
      - [x] Abstract Classes and Interfaces
      - [x] Access Specifiers
      - [x] Inheritance Types
      - [x] Runtime and Static Polymorphism
    - [ ] Errors and Exceptions
      - [ ] Checked vs Unchecked Exceptions
      - [ ] Custom Exceptions
      - [ ] Best Practices for Error Handling
  - [ ] #### Day 2
    - [ ] Generics
      - [ ] Type Params
      - [ ] Wildcards and Bounds
      - [ ] Generic Methods and Classes
    - [x] Annotations
      - [x] Built In Annotations
      - [x] Custom Annotations
      - [x] Reflection API
    - [ ] Functional Programming
      - [x] Lambdas
      - [ ] Method References
      - [ ] Functional Interfaces
      - [x] Stream API
        - [x] Sequential Streams
        - [x] Parallel Streams
        - [x] Collectors API
    - [x] File IO
      - [x] FileInputStream
      - [x] FileOutputStream
      - [x] FileReader
      - [x] FileWriter
      - [ ] Non-blocking IO
      - [ ] Watch Service API
      - [ ] Async File Channel
    - [x] Date-time API
    - [x] Packages
    - [x] Shallow vs Deep Copying
  - [x] #### Day 3
    - [ ] Multithreading and Concurrency
      - [ ] Executors Framework
      - [ ] CompletableFuture
      - [ ] Synchronized Blocks
      - [ ] Reentrant Locks
      - [ ] Fork/Join Framework
      - [ ] Atomic Variable
    - [ ] Thread Safety
    - [ ] Thread safe and Non Thread Safe Collections
    - [ ] Memory Management
      - [ ] Garbage Collection
      - [ ] JVM Internals
      - [ ] Memory Model (Heap, stack, method area)
      - [ ] Profiling and Debugging
    - [ ] Serialization and Deserialization
    - [ ] Cryptography Algorithms (Ciphers and Hashing)
    - [ ] JDBC
      - [ ] Connection Pooling
      - [ ] Transactions and isolation levels
- [ ] ### Pre-Spring Boot (Day 4)
  - [ ] Design Patterns
    - [ ] Singleton
    - [ ] Factory
    - [ ] Builder
    - [ ] Dependency Injection
    - [ ] MVC
  - [ ] SOLID Principles
  - [ ] Immutability
  - [ ] Application Layering
    - [ ] DAO Pattern
    - [ ] Service Layer
    - [ ] Controller Layer
    - [ ] Circuit Breakers
    - [ ] Event Driven Architecture
  - [ ] Build tools
    - [ ] Maven
    - [ ] Gradle
